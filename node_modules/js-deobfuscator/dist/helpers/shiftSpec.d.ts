export var __esModule: boolean;
declare namespace _default {
    const ArrayAssignmentTarget: {};
    const ArrayBinding: {};
    const ArrayExpression: {};
    const ArrowExpression: {};
    const AssignmentExpression: {};
    const AssignmentTargetIdentifier: {};
    const AssignmentTargetPropertyIdentifier: {};
    const AssignmentTargetPropertyProperty: {};
    const AssignmentTargetWithDefault: {};
    const AwaitExpression: {};
    const BinaryExpression: {};
    const BindingIdentifier: {};
    const BindingPropertyIdentifier: {};
    const BindingPropertyProperty: {};
    const BindingWithDefault: {};
    const Block: {};
    const BlockStatement: {};
    const BreakStatement: {};
    const CallExpression: {};
    const CatchClause: {};
    const ClassDeclaration: {};
    const ClassElement: {};
    const ClassExpression: {};
    const CompoundAssignmentExpression: {};
    const ComputedMemberAssignmentTarget: {};
    const ComputedMemberExpression: {};
    const ComputedPropertyName: {};
    const ConditionalExpression: {};
    const ContinueStatement: {};
    const DataProperty: {};
    const DebuggerStatement: {};
    const Directive: {};
    const DoWhileStatement: {};
    const EmptyStatement: {};
    const Export: {};
    const ExportAllFrom: {};
    const ExportDefault: {};
    const ExportFrom: {};
    const ExportFromSpecifier: {};
    const ExportLocalSpecifier: {};
    const ExportLocals: {};
    const ExpressionStatement: {};
    const ForAwaitStatement: {};
    const ForInStatement: {};
    const ForOfStatement: {};
    const ForStatement: {};
    const FormalParameters: {};
    const FunctionBody: {};
    const FunctionDeclaration: {};
    const FunctionExpression: {};
    const Getter: {};
    const IdentifierExpression: {};
    const IfStatement: {};
    const Import: {};
    const ImportNamespace: {};
    const ImportSpecifier: {};
    const LabeledStatement: {};
    const LiteralBooleanExpression: {};
    const LiteralInfinityExpression: {};
    const LiteralNullExpression: {};
    const LiteralNumericExpression: {};
    const LiteralRegExpExpression: {};
    const LiteralStringExpression: {};
    const Method: {};
    const Module: {};
    const NewExpression: {};
    const NewTargetExpression: {};
    const ObjectAssignmentTarget: {};
    const ObjectBinding: {};
    const ObjectExpression: {};
    const ReturnStatement: {};
    const Script: {};
    const Setter: {};
    const ShorthandProperty: {};
    const SpreadElement: {};
    const SpreadProperty: {};
    const StaticMemberAssignmentTarget: {};
    const StaticMemberExpression: {};
    const StaticPropertyName: {};
    const Super: {};
    const SwitchCase: {};
    const SwitchDefault: {};
    const SwitchStatement: {};
    const SwitchStatementWithDefault: {};
    const TemplateElement: {};
    const TemplateExpression: {};
    const ThisExpression: {};
    const ThrowStatement: {};
    const TryCatchStatement: {};
    const TryFinallyStatement: {};
    const UnaryExpression: {};
    const UpdateExpression: {};
    const VariableDeclaration: {};
    const VariableDeclarationStatement: {};
    const VariableDeclarator: {};
    const WhileStatement: {};
    const WithStatement: {};
    const YieldExpression: {};
    const YieldGeneratorExpression: {};
}
export default _default;

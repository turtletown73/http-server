#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./index");
const fs_1 = __importDefault(require("fs"));
const commander_1 = require("commander");
commander_1.program
    .description('Deobfuscate a javascript file')
    .option('-i, --input [input_file]', 'The input file to deobfuscate', 'input/source.js')
    .option('-o, --output [output_file]', 'The deobfuscated output file', 'output/output.js');
commander_1.program.parse(process.argv);
const options = commander_1.program.opts();
// check if the input file exists
if (!fs_1.default.existsSync(options.input)) {
    console.error(`The input file ${options.input} does not exist`);
    process.exit(1);
}
const source = fs_1.default.readFileSync(options.input).toString();
const output = index_1.deobfuscate(source);
fs_1.default.writeFileSync(options.output, output);
console.info(`The output file ${options.output} has been created`);
